-*- org -*-

* DONE Rewrite [[file:src/tests/dtree.lisp::(defun%20walk-node-box-test][`walk-node-box']] tests
* DONE Fix [[file:src/dtree.lisp::(defun walk-node-box][`walk-node-box']]
* TODO Fix `create-nodes-box'
* TODO Fix `find-nodes-box'
* TODO Documentation and code clean up
* TODO Move pyramid.lisp to tests
* TODO User-defined nodes
* TODO README: The description should be more simpler and clearer
  for people without prior knowledge of octrees, pyramids, etc.
* TODO image.lisp - the dtree wrapper for working with multiresolution images
* TODO Teemer
* TODO Signal typed errors rather than simple ones
* TODO Look at exported symbols from the package `sharper'
  Most of [[file:src/utils.lisp][utils]] should be exported.

* TODO README file should contain a road map
* TODO README file duplicates function description and other information
  Maybe it should be generated from a template.

* TODO Compile and test using ECL
* TODO Generate ChangeLog from git log


* What should be done before committing to master
** TODO Resolve all compilation warnings
** TODO Correct docstrings
** TODO Spellcheck all documentation
** TODO Code and documentation clean up. TODOs, FIXMEs


* What should be done usually
** Follow coding and documenting style from
  - Emacs coding and documentation convention
  - SLIME readme files.
  - `Tutorial on Good Lisp Programming Style' by Peter Norvig and Kent
    Pitman http://norvig.com/luv-slides.ps
  - Lisp Frequently Asked Questions
    http://www.cs.cmu.edu/Groups/AI/html/faqs/lang/lisp/part1/faq-doc-4.html
  - If a function has side-effects document them in the same manner as
    in HyperSpec.
